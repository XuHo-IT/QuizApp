@model IEnumerable<QuizApp_UI.Models.Quiz>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Quiz</title>
    <link rel="stylesheet" href="~/css/Quiz.css" />
</head>
<body>

    <div class="quiz-container" id="quiz-container">
        <h3 id="number-question">Loading...</h3>
        <h2 id="question">Loading...</h2>
        <div id="answers">
            <button class="answer-button" onclick="selectAnswer(0)"></button>
            <button class="answer-button" onclick="selectAnswer(1)"></button>
            <button class="answer-button" onclick="selectAnswer(2)"></button>
            <button class="answer-button" onclick="selectAnswer(3)"></button>
        </div>
        <button id="next-btn" onclick="nextQuestion()">Next</button>
    </div>

    <div class="report-container hidden" id="report-container">
        <h2>Quiz Report</h2>
        <p id="motivation-report"></p>
        <img id="result-image" src="" alt="Result Image">
        <p id="score-report"></p>
        <ul id="time-report"></ul>
        <button class="replay-btn" onclick="restartQuiz()">Play Again</button>
        <button class="replay-btn" onclick="window.location.href='@Url.Action("Index", "Home")'">Back Home</button>
    </div>

    <script>
        const questions = @Html.Raw(Json.Serialize(
            Model.Select(q => new
            {
                question = q.Question,
                answers = q.Answer,
                correct = q.CorrectAnswerIndex
            })
            ));

        let currentQuestionIndex = 0;
        let correctCount = 0;
        let startTime;
        let totalTime = 0;

        function showQuestion() {
            const q = questions[currentQuestionIndex];
            document.getElementById("question").textContent = q.question;

            document.getElementById("number-question").textContent = `Quesion: ${currentQuestionIndex + 1}/${questions.length}`;

            const buttons = document.querySelectorAll(".answer-button");
            const buttonsNext = document.querySelector("#next-btn");

            buttons.forEach((btn, i) => {
                btn.textContent = q.answers[i] || "";
                btn.style.backgroundColor = "#00000059";
                btn.style.color = "#fff";
                btn.disabled = false;
            });
            buttonsNext.style.backgroundColor = "gray";

            startTime = new Date();
        }


        function selectAnswer(index) {
            const q = questions[currentQuestionIndex];
            const buttons = document.querySelectorAll(".answer-button");
            const endTime = new Date(); 
            const timeTaken = ((endTime - startTime) / 1000).toFixed(2); 
            totalTime += parseFloat(timeTaken); 

            buttons.forEach((btn, i) => {
                btn.style.backgroundColor = i === q.correct ? "#4CAF50" : (i === index ? "#f44336" : "#00000059");
                btn.style.color = "#fff";
                btn.disabled = true;
            });

            if (index === q.correct) correctCount++;

            document.getElementById("next-btn").disabled = false;
            document.getElementById("next-btn").style.backgroundColor = "#4CAF50";
        }

        function nextQuestion() {
            currentQuestionIndex++;
            if (currentQuestionIndex < questions.length) {
                showQuestion();
                document.getElementById("next-btn").disabled = true;
            } else {
                showReport();
            }
        }
        function showReport() {
            document.getElementById("quiz-container").classList.add("hidden");
            document.getElementById("report-container").classList.remove("hidden");

            let scoreMessage = "";
            let imageSrc = "";

            if (correctCount < 2) {
                scoreMessage = "You should try better next time!";
                imageSrc = "/img/low_score.jpg";
            } else if (correctCount >= 2 && correctCount <= 4) {
                scoreMessage = "You almost got it!";
                imageSrc = "/img/medium_score.jpg";
            } else if (correctCount === 5) {
                scoreMessage = "Well played, boi!";
                imageSrc = "/img/maximum_score.jpg";
            }


            document.getElementById("motivation-report").textContent = scoreMessage;
            document.getElementById("score-report").textContent = `You answered ${correctCount} out of ${questions.length} correctly.`;
            document.getElementById("result-image").src = imageSrc;

            const totalTimeInSeconds = totalTime.toFixed(2);

            const list = document.getElementById("time-report");
            list.innerHTML = "";
            const li = document.createElement("li");
            li.textContent = `Total time: ${totalTimeInSeconds} seconds`;
            list.appendChild(li);
        }


        function restartQuiz() {
            currentQuestionIndex = 0;
            correctCount = 0;
            totalTime = 0; 
            document.getElementById("report-container").classList.add("hidden");
            document.getElementById("quiz-container").classList.remove("hidden");
            document.getElementById("next-btn").disabled = true;
            showQuestion();
        }

        document.getElementById("next-btn").disabled = true;
        showQuestion();
    </script>


</body>
</html>
